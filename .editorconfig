root = true

[*.*]
charset = utf-8
max_line_length = 200
insert_final_newline = false
trim_trailing_whitespace = true
indent_style = space

[*.cs]

# Expression-level preferences
#dotnet_style_operator_placement_when_wrapping = beginning_of_line

# New line preferences
#csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false
#csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true
#csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = false
#csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false
#csharp_style_allow_embedded_statements_on_same_line_experimental = false

[*.cs]
indent_size = 4

#
# Code-style rules https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/
#

dotnet_analyzer_diagnostic.category-Style.severity = warning

# IDE0001 Simplify name
dotnet_diagnostic.IDE0001.severity = none

# IDE0002 Simplify member access
dotnet_diagnostic.IDE0002.severity = warning

# IDE0003 IDE0009 Add/Remove this or Me qualification
dotnet_diagnostic.IDE0003.severity = warning
dotnet_diagnostic.IDE0009.severity = none
dotnet_style_qualification_for_event = false
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_property = false

# IDE0007 IDE0008 Use explicit var/type
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true
csharp_style_var_elsewhere = true

# IDE0011 Add braces
csharp_prefer_braces = true

# IDE0016 Use throw expression
csharp_style_throw_expression = true

# IDE0017 Use object initializers
dotnet_style_object_initializer = false

# IDE0018 Inline variable declaration
csharp_style_inlined_variable_declaration = true

# IDE0019 IDE0260 Use pattern matching to avoid as followed by a null check
csharp_style_pattern_matching_over_as_with_null_check = true

# IDE0020 IDE0038 Use pattern matching to avoid is check followed by a cast
csharp_style_pattern_matching_over_is_with_cast_check = true

# IDE0021 Use expression body for constructors
csharp_style_expression_bodied_constructors = false

# IDE0022 Use expression body for methods
csharp_style_expression_bodied_methods = false

# IDE0023 IDE0024 Use expression body for operators/conversion operators
csharp_style_expression_bodied_operators = false

# IDE0025 Use expression body for properties
csharp_style_expression_bodied_properties = true

# IDE0026 Use expression body for indexers
csharp_style_expression_bodied_indexers = true

# IDE0027 Use expression body for accessors
csharp_style_expression_bodied_accessors = true

# IDE0028 IDE0300 IDE0301 IDE0302 IDE0303 IDE0304 IDE0305 IDE0306  Use collection initializers
dotnet_style_collection_initializer = false
dotnet_style_prefer_collection_expression = false

# IDE0029 IDE0030 IDE0270 Null check can be simplified
dotnet_style_coalesce_expression = true

# IDE0031 Use null propagation
dotnet_style_null_propagation = true

# IDE0032 Use auto property
dotnet_style_prefer_auto_properties = true

# IDE0033 Use explicitly prov IDEd tuple name
dotnet_style_explicit_tuple_names = true

# IDE0034 Simplify default expression
csharp_prefer_simple_default_expression = true

# IDE0036 Order modifiers
csharp_preferred_modifier_order = public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async

# IDE0037 Use inferred member name
dotnet_diagnostic.IDE0037.severity = none
dotnet_style_prefer_inferred_tuple_names = false
dotnet_style_prefer_inferred_anonymous_type_member_names = false

# IDE0039 Use local function instead of lambda
csharp_style_prefer_local_over_anonymous_function = true

# IDE0040 Add accessibility modifiers
dotnet_style_require_accessibility_modifiers = for_non_interface_members

# IDE0041 Use is null check
dotnet_style_prefer_is_null_check_over_reference_equality_method = true

# IDE0042 Deconstruct variable declaration
csharp_style_deconstructed_variable_declaration = false

# IDE0044 Add readonly modifier
dotnet_style_readonly_field = true

# IDE0045 Use conditional expression for assignment
dotnet_style_prefer_conditional_expression_over_assignment = true

# IDE0046 Use conditional expression for return
dotnet_diagnostic.IDE0046.severity = none
dotnet_style_prefer_conditional_expression_over_return = true

# IDE0047 IDE0048 Add/Remove unnecessary parentheses
dotnet_diagnostic.IDE0047.severity = none
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary
dotnet_style_parentheses_in_other_operators = never_if_unnecessary

# IDE0049 Use language keywords instead of framework type names for type references
dotnet_diagnostic.IDE0049.severity = none
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# IDE0053 Use expression body for lambdas
csharp_style_expression_bodied_lambdas = true

# IDE0054 IDE0074 Use compound/coalesce assignment
dotnet_style_prefer_compound_assignment = true

# IDE0055 Fix formatting

dotnet_sort_system_directives_first = false
dotnet_separate_import_directive_groups = false

# New-line options
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation options
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = false

# Spacing options
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false

# Wrap options
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

# IDE0056 Use index operator
csharp_style_prefer_index_operator = false

# IDE0057 Use range operator
csharp_style_prefer_range_operator = false

# IDE0058 Remove unused expression value
dotnet_diagnostic.IDE0058.severity = none
csharp_style_unused_value_expression_statement_preference = discard_variable

# IDE0059 Remove unnecessary value assignment
dotnet_diagnostic.IDE0059.severity = none
csharp_style_unused_value_assignment_preference = discard_variable

# IDE0060 Remove unused parameter
dotnet_code_quality_unused_parameters = all

# IDE0061 Use expression body for local functions
csharp_style_expression_bodied_local_functions = false

# IDE0062 Make local function static
csharp_prefer_static_local_function = false

# IDE0063 Use simple using statement
csharp_prefer_simple_using_statement = true

# IDE0065 using directive placement
csharp_using_directive_placement = outside_namespace

# IDE0066 Use switch expression
csharp_style_prefer_switch_expression = true

# IDE0071 Simplify interpolation
dotnet_style_prefer_simplified_interpolation = true

# IDE0072 Add missing cases to switch expression
dotnet_diagnostic.IDE0072.severity = none

# IDE0073 Use file header
file_header_template =

# IDE0075 Simplify conditional expression
dotnet_style_prefer_simplified_boolean_expressions = true

# IDE0078 Use pattern matching
csharp_style_prefer_pattern_matching = false

# IDE0079 Remove unnecessary suppression
dotnet_remove_unnecessary_suppression_exclusions = true

# IDE0083 Use pattern matching (not operator)
csharp_style_prefer_not_pattern = true

# IDE0090 Simplify new expression
csharp_style_implicit_object_creation_when_type_is_apparent = false

# IDE0130 Namespace does not match folder structure
dotnet_style_namespace_match_folder  = true:warning

# IDE0150 Prefer null check over type check
csharp_style_prefer_null_check_over_type_check = false

# IDE0160 IDE0161 Use file/block-scoped namespace
csharp_style_namespace_declarations = file_scoped

# IDE0170 Simplify property pattern
csharp_style_prefer_extended_property_pattern = false

# IDE0180 Use tuple to swap values
csharp_style_prefer_tuple_swap = true

# IDE0200 Remove unnecessary lambda expression
dotnet_diagnostic.IDE0200.severity = none
csharp_style_prefer_method_group_conversion = false

# IDE0210 Convert to top-level/'Program.Main' statements
csharp_style_prefer_top_level_statements = false

# IDE0220 Add explicit cast in foreach loop
dotnet_style_prefer_foreach_explicit_cast_in_source = true

# IDE0230 Use UTF-8 string literal
csharp_style_prefer_utf8_string_literals = true

# IDE0250 Struct can be made 'readonly'
csharp_style_prefer_readonly_struct = true

# IDE0251 Member can be made 'readonly'
csharp_style_prefer_readonly_struct_member = true

# IDE0290 Use primary constructor
csharp_style_prefer_primary_constructors = false

# IDE0320 Make anonymous function static
csharp_prefer_static_anonymous_function = false

# IDE0330 Prefer 'System.Threading.Lock'
csharp_prefer_system_threading_lock = true

# IDE0340 Use unbound generic type
csharp_style_prefer_unbound_generic_type_in_nameof = true

# IDE0350 Use implicitly typed lambda
csharp_style_prefer_implicitly_typed_lambda_expression = false

# IDE1005 Use conditional delegate call
csharp_style_conditional_delegate_call = true

# IDE1006 Naming styles

# Local

dotnet_naming_rule.local.style = local
dotnet_naming_rule.local.symbols = local
dotnet_naming_rule.local.severity = warning

dotnet_naming_style.local.capitalization = camel_case

dotnet_naming_symbols.local.applicable_kinds = local, parameter
dotnet_naming_symbols.local.applicable_accessibilities = local

# Interfaces

dotnet_naming_rule.interfaces.style = interfaces
dotnet_naming_rule.interfaces.symbols = interfaces
dotnet_naming_rule.interfaces.severity = warning

dotnet_naming_style.interfaces.capitalization = pascal_case
dotnet_naming_style.interfaces.required_prefix = I

dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interfaces.required_modifiers =

# Types

dotnet_naming_rule.types.style = types
dotnet_naming_rule.types.symbols = types
dotnet_naming_rule.types.severity = warning

dotnet_naming_style.types.capitalization = pascal_case

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

# Private fields

dotnet_naming_rule.private_fields.style = private_fields
dotnet_naming_rule.private_fields.symbols = private_fields
dotnet_naming_rule.private_fields.severity = warning

dotnet_naming_style.private_fields.capitalization = camel_case
dotnet_naming_style.private_fields.required_prefix = _

dotnet_naming_symbols.private_fields.applicable_kinds = field, event
dotnet_naming_symbols.private_fields.applicable_accessibilities = private

# Shared fields

dotnet_naming_rule.shared_fields.style = shared_fields
dotnet_naming_rule.shared_fields.symbols = shared_fields
dotnet_naming_rule.shared_fields.severity = warning

dotnet_naming_style.shared_fields.capitalization = pascal_case

dotnet_naming_symbols.shared_fields.applicable_kinds = field, event
dotnet_naming_symbols.shared_fields.applicable_accessibilities = public, internal, protected, protected_internal, private_protected

# Members are not fields

dotnet_naming_rule.members_are_not_fields.style = members_are_not_fields
dotnet_naming_rule.members_are_not_fields.symbols = members_are_not_fields
dotnet_naming_rule.members_are_not_fields.severity = warning

dotnet_naming_style.members_are_not_fields.capitalization = pascal_case

dotnet_naming_symbols.members_are_not_fields.applicable_kinds = property, method, type_parameter
dotnet_naming_symbols.members_are_not_fields.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected


#
# Code-style rules https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/
#

# CA1024 Use properties where appropriate
dotnet_diagnostic.CA1024.severity = none

# CA1032 Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = none

# CA1063: Implement IDisposable correctly
dotnet_diagnostic.CA1063.severity = none

# CA1062 Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = none

# CA1308 Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = none

# CA1802 Use Literals Where Appropriate
dotnet_diagnostic.CA1802.severity = none

# CA1815 Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = none

# CA1816 Call GC.SuppressFinalize correctly
dotnet_diagnostic.CA1816.severity = none

# CA1826 Use property instead of Linq Enumerable method
dotnet_diagnostic.CA1826.severity = none

# CA1848 Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = none

# CA1859 Use concrete types when possible for improved performance
dotnet_diagnostic.CA1859.severity = none

# CA1852 Seal internal types
dotnet_diagnostic.CA1852.severity = none

# CA2007 Do not directly await a Task
dotnet_diagnostic.CA2007.severity = none

# CA2201 Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = none

# CA2225 Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = none

# CA2254 Template should be a static expression
dotnet_diagnostic.CA2254.severity = none